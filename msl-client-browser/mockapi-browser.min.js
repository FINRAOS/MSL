setMockRespond=function(e,t,n){var r=null;r=new XMLHttpRequest;if(n["eval"]!==undefined&&typeof n["eval"]==="function"){n["eval"]=n["eval"].toString()}r.open("POST","http://"+e+":"+t+"/mock/fakerespond",true);r.setRequestHeader("Content-Type","application/json");r.send(JSON.stringify(n))};registerTemplate=function(e,t,n,r){var i=null;i=new XMLHttpRequest;var s={};s.template=n;s.id=r;i.open("POST","http://"+e+":"+t+"/mock/template",true);i.setRequestHeader("Content-Type","application/json");i.send(JSON.stringify(s))};setInterceptXHR=function(e,t,n){var r=null;r=new XMLHttpRequest;var i={};i.requestPath=n;r.open("POST","http://"+e+":"+t+"/mock/interceptxhr",true);r.setRequestHeader("Content-Type","application/json");r.send(JSON.stringify(i))};getInterceptedXHR=function(e,t,n,r){var i=null;i=new XMLHttpRequest;var s={};s.requestPath=n;i.open("POST","http://"+e+":"+t+"/mock/getinterceptedxhr",true);i.setRequestHeader("Content-Type","application/json");i.onreadystatechange=function(){if(i.readyState==4&&i.status==200){r(i.responseText)}};i.send(JSON.stringify(s))};setParamIgnored=function(e,t,n){var r=null;r=new XMLHttpRequest;var i={};i.requestPath=n;r.open("POST","http://"+e+":"+t+"/setIgnoreFlag",true);r.setRequestHeader("Content-Type","application/json");r.send(JSON.stringify(i))};unRegisterMock=function(e,t,n){var r=null;r=new XMLHttpRequest;var i={};i.requestPath=n;r.open("POST","http://"+e+":"+t+"/unregisterMock",true);r.setRequestHeader("Content-Type","application/json");r.send(JSON.stringify(i))}