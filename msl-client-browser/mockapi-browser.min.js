setMockRespond=function(e,t,n){var s=null;s=new XMLHttpRequest,void 0!==n.eval&&"function"==typeof n.eval&&(n.eval=n.eval.toString()),s.open("POST","http://"+e+":"+t+"/mock/fakerespond",!0),s.setRequestHeader("Content-Type","application/json"),s.send(JSON.stringify(n))},registerTemplate=function(e,t,n,s){var a=null;a=new XMLHttpRequest;var o={};o.template=n,o.id=s,a.open("POST","http://"+e+":"+t+"/mock/template",!0),a.setRequestHeader("Content-Type","application/json"),a.send(JSON.stringify(o))},setInterceptXHR=function(e,t,n){var s=null;s=new XMLHttpRequest;var a={};a.requestPath=n,s.open("POST","http://"+e+":"+t+"/mock/interceptxhr",!0),s.setRequestHeader("Content-Type","application/json"),s.send(JSON.stringify(a))},getInterceptedXHR=function(e,t,n,s){var a=null;a=new XMLHttpRequest;var o={};o.requestPath=n,a.open("POST","http://"+e+":"+t+"/mock/getinterceptedxhr",!0),a.setRequestHeader("Content-Type","application/json"),a.onreadystatechange=function(){4==a.readyState&&200==a.status&&s(a.responseText)},a.send(JSON.stringify(o))},setParamIgnored=function(e,t,n){var s=null;s=new XMLHttpRequest;var a={};a.requestPath=n,s.open("POST","http://"+e+":"+t+"/setIgnoreFlag",!0),s.setRequestHeader("Content-Type","application/json"),s.send(JSON.stringify(a))},unRegisterMock=function(e,t,n){var s=null;s=new XMLHttpRequest;var a={};a.requestPath=n,s.open("POST","http://"+e+":"+t+"/unregisterMock",!0),s.setRequestHeader("Content-Type","application/json"),s.send(JSON.stringify(a))};